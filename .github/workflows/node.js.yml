# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Angular GitHub CI
on:
  push:
    branches: [ "master", "develop-*" ]
  pull_request:
    branches: [ "master", "develop-*" ]

jobs:
  ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          npm ci
      - name: Install admin-lte
        run: |
          npm install admin-lte --save
#      - name: Install karma
#        run: |
#          npm i -D puppeteer karma-chrome-launcher
      - name: Build
        run: |
          npm run build --configuration=production
#      - name: Test
#        run: |
#          npm run test:ci
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.SONAR_TOKEN }}
          output-file: "false"

      - name: Create Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          
      - name: Add GH Pages
        run: |
          npm run add:ghpages
      
      - name: Deploy
        uses: crazy-max/ghaction-github-pages@v3
        with:
            target_branch: gh-pages
            build_dir: dist/clinique
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
